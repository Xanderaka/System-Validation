sort AlarmStatus = struct Critical | Functional;
     IndicatorCoolingSystem = struct Green | Red;
	 IndicatorBrokenCoolingUnit = struct ColorGray | ColorOrange;
	 IndicatorBrokenTemperatureSensor = struct GrayColor | OrangeColor;
	 CoolingUnitComponentStatus = struct NoneBroken | SomeBroken | AllBroken;
	 TemperatureSensorComponentStatus = struct NoneAreBroken | SomeAreBroken | AllAreBroken;
     CoolingSystem = struct On | Off;
	 TemperatureStatus = struct Above | EqualOrBelow;
	 ButtonType = struct Start | Stop | Reset | Up | Down;

act SoundAlarm: AlarmStatus;
	IndicateCoolingSystem: IndicatorCoolingSystem;
	IndicateBrokenCoolingUnit: IndicatorBrokenCoolingUnit;
	IndicateBrokenTemperatureSensor: IndicatorBrokenTemperatureSensor; 
	ReceiveButton: ButtonType;
	StartCoolingUnit, StopCoolingUnit, CheckTemperatureLevels, SwitchToFunctionalComponent, a;
	ReceiveTemperature: TemperatureStatus;
	TurnCoolingSystem: CoolingSystem;
	RequestCoolingUnitStatus: CoolingUnitComponentStatus;
	RequestTemperatureSensorStatus: TemperatureSensorComponentStatus;
	

proc System(systemStatus:CoolingSystem, alarm:AlarmStatus) = 
	 	(systemStatus==Off) -> (ReceiveButton(Start).TurnCoolingSystem(On).IndicateCoolingSystem(Green).System(systemStatus=On)+ReceiveButton(Stop).TurnCoolingSystem(Off).System(Off,Functional)) <> %if start is pressed
	 	((systemStatus==On) -> ((alarm==Critical)-> (ReceiveButton(Stop).TurnCoolingSystem(Off).IndicateCoolingSystem(Red).System(systemStatus=Off)+(ReceiveButton(Reset).SoundAlarm(Functional). IndicateBrokenCoolingUnit(ColorGray).IndicateBrokenTemperatureSensor(GrayColor).(placeholder||placeholder2) + (alarm!=Critical) -> (placeholder||placeholder2)+ ReceiveButton(Stop).TurnCoolingSystem(Off).IndicateCoolingSystem(Red).System(systemStatus=Off))))); %if stop is pressed

	 CheckCoolingUnitStatus(coolingUnit: CoolingUnitComponentStatus)=
		(coolingUnit==NoneBroken) -> RequestCoolingUnitStatus(NoneBroken).CheckCoolingUnitStatus(NoneBroken) +
		(coolingUnit==SomeBroken) -> (IndicateBrokenCoolingUnit(ColorOrange).SwitchToFunctionalComponent.RequestCoolingUnitStatus(SomeBroken).CheckCoolingUnitStatus(SomeBroken)) +
		(coolingUnit==AllBroken) -> RequestCoolingUnitStatus(AllBroken).CheckCoolingUnitStatus(AllBroken);%(SoundAlarm(Critical).System(On,Critical));

	CheckTemperatureSensorStatus(temperatureSensor: TemperatureSensorComponentStatus)=
		(temperatureSensor==NoneAreBroken) -> RequestTemperatureSensorStatus(NoneAreBroken).CheckTemperatureSensorStatus(NoneAreBroken) + %(CheckTemperatureLevels.(ReceiveTemperature(Above).RegulateTemperature(Above)+RegulateTemperature(EqualOrBelow)))+
		(temperatureSensor==SomeAreBroken) -> (IndicateBrokenTemperatureSensor(OrangeColor).RequestTemperatureSensorStatus(SomeAreBroken).CheckTemperatureSensorStatus(SomeAreBroken)) + %CheckTemperatureLevels.(ReceiveTemperature(Above).RegulateTemperature(Above)+RegulateTemperature(EqualOrBelow))) +
		(temperatureSensor==AllAreBroken) -> RequestTemperatureSensorStatus(AllAreBroken).CheckTemperatureSensorStatus(AllAreBroken);%(SoundAlarm(Critical).System(On,Critical));

	RegulateTemperature(status: TemperatureStatus)=
		(status==Above) -> ((ReceiveButton(Down).StartCoolingUnit+StartCoolingUnit).System(On,Functional) + ReceiveButton(Up).(RegulateTemperature(EqualOrBelow) + RegulateTemperature(Above))) +
		(status==EqualOrBelow) -> ((ReceiveButton(Up).StopCoolingUnit+StopCoolingUnit).(RequestCoolingUnitStatus(NoneBroken).CheckCoolingUnitStatus(NoneBroken)+RequestCoolingUnitStatus(SomeBroken).CheckCoolingUnitStatus(SomeBroken)+RequestCoolingUnitStatus(AllBroken).CheckCoolingUnitStatus(AllBroken)) + (ReceiveButton(Down).(RegulateTemperature(EqualOrBelow)+RegulateTemperature(Above))));

	placeholder = (RequestCoolingUnitStatus(NoneBroken).CheckCoolingUnitStatus(NoneBroken)+RequestCoolingUnitStatus(SomeBroken).CheckCoolingUnitStatus(SomeBroken)+RequestCoolingUnitStatus(AllBroken).CheckCoolingUnitStatus(AllBroken));

	placeholder2 = (RequestTemperatureSensorStatus(NoneAreBroken).CheckTemperatureSensorStatus(NoneAreBroken)+RequestTemperatureSensorStatus(SomeAreBroken).CheckTemperatureSensorStatus(SomeAreBroken)+RequestTemperatureSensorStatus(AllAreBroken).CheckTemperatureSensorStatus(AllAreBroken));

init System(Off, Functional); 